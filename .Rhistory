rbeta(5000,1,2)
plot(density(x))
x <- rbeta(5000,1,2)
plot(density(x))
x <- rbeta(5000,1,.3)
plot(density(x,from=0,to=1))
x <- rbeta(5000,1,1)
plot(density(x,from=0,to=1))
x <- rbeta(5000,1,10)
plot(density(x,from=0,to=1))
x <- rbeta(5000,0,10)
plot(density(x,from=0,to=1))
x <- rbeta(5000,5,10)
plot(density(x,from=0,to=1))
x <- rbeta(5000,5,5)
plot(density(x,from=0,to=1))
rbeta(5000,1,2)
96*7
install.packages("igraph")
library(igraph)
library(magrittr)
5 %>% ./6
5 %>% print()
5 %>% print(.)
5 %>% (./6)
prod(5)
a <- rnorm(1000,1,.2)
b <- exp(a)
a <- rnorm(1000,1,.2)
b <- exp(a)
plot(density(b))
plot(density(a))
b <- 10^(a)
plot(density(b))
plot(density(a))
citation()
setwd("~/Documents/DSanchez")
library(umap)
install.packages("umap")
library(umap)
library(magrittr)
library(gplots)
install.packages(gplots)
install.packages("gplots")
library(gplots)
install.packages("gplots")
library(gplots)
data0 <- read.delim("data/results/Normalized.Filtered.csv",sep=";",nrows = 138750,dec = ",")
rownames(data0) <- data0$X
data0$X <- NULL
m <- regexpr("_.+_",colnames(data0))
patient <- regmatches(colnames(data0),m) %>% gsub("_","",.)
clinical0 <- gdata::read.xls("data/Macrophages clinical data.xlsx",nrows=22)
clinical0 <- gdata::read.xls("data/Macrophages clinical data.xlsx",nrows=22)
rownames(clinical0) <- clinical0$ID
genes0 <- read.csv("data/results/Annotations.AllGenes.csv",sep="\t",nrows = 138750)
table(genes0$Probe %in% row.names(data0))
inGenes <- genes0$Probe[which(genes0$Symbol!="")]
inGenes <- intersect(inGenes,rownames(data0))
rownames(genes0) <- genes0$Probe
data1 <- data0[inGenes,] %>% limma::normalizeBetweenArrays()
rownames(data1) <- genes0[inGenes,"Symbol"]
boxplot(data1,las=2,pch=19)
install.packages("limma")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
data1 <- data0[inGenes,] %>% limma::normalizeBetweenArrays()
rownames(data1) <- genes0[inGenes,"Symbol"]
boxplot(data1,las=2,pch=19)
type1 <- factor(substr(colnames(data0),1,3))
type2 <- factor(substr(colnames(data0),5,7))
colSums(is.na(data1))
locPalette <- c("lightblue3","darkblue")
disPalette <- c("green3","orange3")
par(mfrow=c(2,2),mar=c(5,5,2,2))
pca1 <- prcomp(t(data1),scale. = T)
plot(pca1$x[,1:2],col=locPalette[type1],pch=19,main=c("PCA - tissue location"))
plot(pca1$x[,1:2],col=disPalette[type2],pch=19,main=c("PCA - disease status"))
summary(glm(type1 ~ .,as.data.frame(pca1$x[,c(1,2,4)]),family=binomial))
summary(glm(type1 ~ .,as.data.frame(pca1$x[,c(1,2)]),family=binomial))
plot(pca1$x[,c(1,4)],col=locPalette[type1],pch=19,main=c("PCA - tissue location"))
summary(glm(type1 ~ pca1$x[,1] + pca1$x[,2],family="binomial"))
summary(lm(pca1$x[,1] ~ type1))
summary(lm(pca1$x[,2] ~ type1))
summary(lm(pca1$x[,1] ~ type2))
summary(lm(pca1$x[,2] ~ type2))
umap1 <- umap(scale(t(data1)))
plot(umap1$layout,col=locPalette[type1],pch=19,xlab="UMAP1",ylab="UMAP2",main="UMAP - tissue location")
identify(umap1$layout[,1],umap1$layout[,2],rownames(umap1$layout))
points(umap1$layout["SUB.UNH_550174_1",],col="red")
lm0 <- apply(data1,1,function(x) lm(x ~ type1 + type2))
lm1 <- apply(data1,1,function(x) lm(x ~ type1 * type2))
sapply(lm1,function(x) {
summary(x) %>% coef %>% .[,4]
}) -> interaction.pvals
interaction.pvals
dim(interaction.pvals)
sapply(lm1,function(x) {
summary(x) %>% coef %>% .[,4]
}) %>% t -> interaction.pvals
head(interaction.pvals)
sapply(lm0,function(x) {
summary(x) %>% coef %>% .[,4]
}) %>% t -> no.interaction.pvals
head(no.interaction.pvals)
sapply(lm0,function(x) {
summary(x) %>% coef %>% .[,4]
}) %>% t %>% as.data.frame -> no.interaction.pvals
sapply(lm1,function(x) {
summary(x) %>% coef %>% .[,4]
}) %>% t %>% as.data.frame -> interaction.pvals
plot(no.interaction.pvals$type1VIS,interaction.pvals,log="xy")
plot(no.interaction.pvals$type1VIS,interaction.pvals$type1VIS,log="xy")
plot(no.interaction.pvals$type1VIS,interaction.pvals$type2UNH,log="xy")
plot(no.interaction.pvals$type1VIS,interaction.pvals$type2UNH,log="xy",pch=".")
plot(no.interaction.pvals$type1VIS,interaction.pvals$type1VIS,log="xy",pch=".")
candidates <- which(interaction.pvals$`type1VIS:type2UNH` < 0.05)
candidates
candidates <- which(interaction.pvals$`type1VIS:type2UNH` < 0.01)
candidates
candidates <- which(interaction.pvals$`type1VIS:type2UNH` < 0.05)
p.adjust(interaction.pvals$`type1VIS:type2UNH`)
p.adjust(interaction.pvals$`type1VIS:type2UNH`) > 0.05
p.adjust(interaction.pvals$`type1VIS:type2UNH`) < 0.05
p.adjust(interaction.pvals$`type1VIS:type2UNH`) < 0.05 %>% any
table(p.adjust(interaction.pvals$`type1VIS:type2UNH`) < 0.05)
head(data1)
type2
lm1 <- apply(data1[,type2=="HEA"],1,function(x) lm(x ~ type1[,type2=="HEA"]))
lm1 <- apply(data1[,type2=="HEA"],1,function(x) lm(x ~ type1[type2=="HEA"]))
type1
lm1 <- apply(data1[,type1=="SUB"],1,lm(x ~ type2[type1=="SUB"]))
lm1 <- apply(data1[,type1=="SUB"],1,function(x) lm(x ~ type2[type1=="SUB"]))
lm2 <- apply(data1[,type1=="VIS"],1,function(x) lm(x ~ type2[type1=="VIS"]))
summary(lm2$ISG15)
summary(lm2$ISG15) %>% coef
# Healthy vs Unhealthy
# In SUB
lm1 <- apply(data1[,type1=="SUB"],1,function(x) lm(x ~ I(status=type2[type1=="SUB"])))
# Healthy vs Unhealthy
# In SUB
lm1 <- apply(data1[,type1=="SUB"],1,function(x) lm(x ~ (status=type2[type1=="SUB"])))
summary(lm1$ISG15)
lm1 <- apply(data1[,type1=="SUB"],1,function(x) lm(x ~ status))
# Healthy vs Unhealthy
# In SUB
status <- type2[type1=="SUB"]
lm1 <- apply(data1[,type1=="SUB"],1,function(x) lm(x ~ status))
# In VIS
status <- type2[type1=="VIS"]
lm2 <- apply(data1[,type1=="VIS"],1,function(x) lm(x ~ status))
summary(lm2$ISG15) %>% coef
sapply(lm1,function(x) summary(x) %>% coef %>% .[,4]) -> lm1.pvals
sapply(lm2,function(x) summary(x) %>% coef %>% .[,4]) -> lm2.pvals
lm1.pvals
sapply(lm1,function(x) summary(x) %>% coef %>% .[,4]) %>% t -> lm1.pvals
sapply(lm2,function(x) summary(x) %>% coef %>% .[,4]) %>% t -> lm2.pvals
lm1.pvals
plot(lm1.pvals[,2],lm2.pvals[,2])
plot(lm1.pvals[,2],lm2.pvals[,2],log="xy")
coef(summary(lm1$ISG15))
getPvals <- function(x) {
sapply(x,function(x) summary(x) %>% coef %>% .[,'Pr(>|t|']) %>% t
}
getPvals(lm1[1:10])
getPvals <- function(x) {
sapply(x,function(x) summary(x) %>% coef %>% .[,'Pr(>|t|)']) %>% t
}
getPvals(lm1[1:10])
getPvals(lm1) -> lm1.pvals
getPvals(lm2) -> lm2.pvals
getPvals <- function(x) {
sapply(x,function(x) summary(x) %>% coef %>% .[,'Pr(>|t|)']) %>% t %>% as.data.frame
}
getPvals(lm1) -> lm1.pvals
getPvals(lm2) -> lm2.pvals
table(lm1.pvals$statusUNH < 0.01)
table(lm1.pvals$statusUNH < 0.01 & lm2.pvals$statusUNH < 0.01)
table(lm1.pvals$statusUNH < 0.01 || lm2.pvals$statusUNH < 0.01)
table(lm1.pvals$statusUNH < 0.01 | lm2.pvals$statusUNH < 0.01)
table(lm1.pvals$statusUNH < 0.01,lm2.pvals$statusUNH < 0.01)
table(lm1.pvals$statusUNH < 0.05,lm2.pvals$statusUNH < 0.05)
